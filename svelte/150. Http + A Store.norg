@document.meta
title: 150. Http + A Store
description: 
authors: mattc
categories: [
  writable store
  Store
  Firebase
  Realtime Database
]
created: 2024-01-03T14:02:54+0800
updated: 2024-01-03T14:03:26+0800
version: 1.1.1
@end

* Current App architecture

  In the previous lecture, we removed the local state to store hobbies and instead used {#await} to fully utilize the data from the Firebase Realtime Database to render hobbies on the page.

  .image pic/135/1.png

  Although this approach is very direct and requires very little code, the drawback is that after each operation (add, remove) on hobbies, it is necessary to query the database again to obtain the new hobbies content for rendering. Additionally, if there are other components that also need to render the content of hobbies, they also need to individually query, which can be very costly in terms of network resources.


* Create writable store & render from it

  We create a writable store and store the hobbies obtained from the initial query in it, and use it to render the interface instead of {#await}.

  .image pic/135/2.png


* Not query again after action but update store

  In this way, after each operation, we only need to update the content of the store, and it will automatically reactive to the page. We don't need to query the database anymore, nor do we need to do anything special, the reactive happens automatically.

** add hobby
   .image pic/135/3.png

** remove hobby
   .image pic/135/4.png
