@document.meta
title: 197. Updating User Password with Our API
description: 
authors: mattc
categories: [
  Password
  Updating
]
created: 2023-12-09T12:03:40+0800
updated: 2023-12-09T12:04:21+0800
version: 1.1.1
@end

* Goal and Planning

  In the previous lecture, we implemented the part of updating user data in the account page. In this lecture, we will implement the part of updating the password in the account page. In the backend, this is handled by another route.

  .image pic/197/1.png

  .image pic/197/2.png


* Coding

** Modify fetching function
   Although the back-end processes for /updateMe and /updateMyPassword are quite different, the only difference in the front-end is the call path and the data being passed. Everything else is the same, so we can directly modify the 'updateSettings' function to handle both scenarios.

   .image pic/197/3.png

** Collect inputs and bind function to button
   Then collect data from the pug input elements and pass it into the above function, and bind it to the submit password button.

   .image pic/197/4.png


* Test & Improving UX

  Let's do a test.

  .image pic/197/5.png

  The test result is successful, but there are still some areas that can be improved for user experience.

** Clear input fields after submitting
   .image pic/197/6.png

** Updating hint on the button
   Because the password update process involves the use of encryption technology, it takes time. The frontend should provide some prompts to prevent users from feeling strange.

   .image pic/197/7.png

   .image pic/197/8.png
